import numpy as np
import cv2
import PIL
import os
import time

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
russianplate_cascade = cv2.CascadeClassifier('haarcascade_russian_plate_number.xml')
clock_cascade = cv2.CascadeClassifier('haarcascade_wallclock.xml')
fullbody_cascade = cv2.CascadeClassifier('haarcascade_fullbody.xml')

img_path = 'http://192.168.137.246:8000/stream.mjpg'
#cap = cv2.VideoCapture(img_path)
cap = cv2.VideoCapture(0)
while 1:
    ret, img = cap.read()
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (x, y, w, h) in faces:
        cv2.rectangle(gray, (x, y), (x + w, y + h), (255, 0, 0), 2)
        roi_gray = gray[y:y + h, x:x + w]
        roi_color = img[y:y + h, x:x + w]
    path = 'C:/Users/alexp/OneDrive/Documenten/GitHub/BreachingDroneElite/Visual Studio/Images'
    cv2.imwrite(os.path.join(path, 'Frame.jpg'), gray)
    #cv2.imshow('img', gray)

    k = cv2.waitKey(30) & 0xff
    if k == 27:
        break

cap.release()
cv2.destroyAllWindows()